ids:
  - PostId
types:
  BlogPost:
    docs: A blog post
    properties:
      id: PostId
      type: PostType
      title: string
      author: Author
      content: string
  PostType:
    enum:
      - LONG
      - SHORT
  Author:
    union:
      anonymous: {}
      name: string
  CreatePostRequest:
    properties:
      title: string
      author:
        type: Author
        docs: Author is the writer.
      content: string
      postType: PostType
errors:
  PostNotFoundError:
    http:
      statusCode: 400
    type:
      properties:
        id: PostId
services:
  http:
    PostsService:
      auth: true
      headers:
        x-service-header: string
      base-path: /
      endpoints:
        createPost:
          docs: Creates a blog post and returns blog post id.
          method: POST
          path: /create
          headers:
            x-endpoint-header:
              docs: I'm a header!
              type: string
          request: CreatePostRequest
          response: PostId
        getPost:
          docs: Gets a blog post.
          method: GET
          auth: false
          path: /{postId}
          path-parameters:
            postId: PostId
          response: BlogPost
          errors:
            - PostNotFoundError
