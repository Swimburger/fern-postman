ids:
  - PostId
types:
  BlogPost:
    docs: A blog post
    properties:
      id: PostId
      type: PostType
      title: string
      author: Author
      content: string
  PostType:
    enum:
      - LONG
      - SHORT
  Author:
    union:
      anonymous: {}
      name: string
errors:
  PostNotFoundError:
    http:
      statusCode: 400
    properties:
      id: PostId
services:
  http:
    PostsService:
      auth: none
      base-path: /posts
      endpoints:
        createPost:
          docs: Creates a blog post and returns blog post id.
          method: POST
          path: /create
          request:
            properties:
              title: string
              author:
                type: Author
                docs: Author is the writer.
              content: string
              postType: PostType
          response: PostId
        getPost:
          docs: Gets a blog post.
          method: GET
          path: /{postId}
          parameters:
            postId: PostId
          response: BlogPost
          errors:
            union:
              notFound: PostNotFoundError
